import { Set, OrderedSet, List } from "immutable";
export declare class Graph<T> {
    private readonly _nodes;
    private readonly _indexByNode;
    private readonly _successors;
    constructor(_nodes: T[], invertDirection: boolean, edges: number[][] | ((node: T) => Set<T>));
    readonly size: number;
    readonly nodes: List<T>;
    findRoots(): OrderedSet<T>;
    dfsTraversal(root: T, preOrder: boolean, process: (node: T) => void): void;
    stronglyConnectedComponents(): Graph<OrderedSet<T>>;
    makeDot(includeNode: (n: T) => boolean, nodeLabel: (n: T) => string): string;
}
