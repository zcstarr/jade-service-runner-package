"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ga = require("universal-analytics");
var storage = require("./storage");
var ci = require("./ci");
var uuid = require("uuid/v4");
var GoogleAnalyticsID = "UA-102732788-5";
var NoAnalytics = /** @class */ (function () {
    function NoAnalytics() {
    }
    NoAnalytics.prototype.pageview = function (_page) {
        // Pass
    };
    NoAnalytics.prototype.timing = function (_category, _variable, _time) {
        // Pass
    };
    NoAnalytics.prototype.event = function (_category, _action, _label, _value) {
        // Pass
    };
    return NoAnalytics;
}());
exports.NoAnalytics = NoAnalytics;
var GoogleAnalytics = /** @class */ (function () {
    function GoogleAnalytics() {
        var ciInfo = ci.getProvider();
        var userId = ciInfo !== undefined ? ciInfo.userId : storage.get("userId", uuid());
        this.visitor = ga(GoogleAnalyticsID, userId);
        if (ciInfo !== undefined) {
            this.ciProvider = ciInfo.provider;
        }
    }
    Object.defineProperty(GoogleAnalytics.prototype, "ciProvider", {
        set: function (provider) {
            this.visitor.set("dimension1", provider);
        },
        enumerable: true,
        configurable: true
    });
    GoogleAnalytics.prototype.pageview = function (page) {
        this.visitor.pageview(page).send();
    };
    GoogleAnalytics.prototype.timing = function (category, variable, time) {
        this.visitor.timing(category, variable, time).send();
    };
    GoogleAnalytics.prototype.event = function (category, action, label, value) {
        if (label !== undefined) {
            if (value !== undefined) {
                this.visitor.event(category, action, label, value).send();
            }
            else {
                this.visitor.event(category, action, label).send();
            }
        }
        else {
            this.visitor.event(category, action).send();
        }
    };
    return GoogleAnalytics;
}());
exports.GoogleAnalytics = GoogleAnalytics;
