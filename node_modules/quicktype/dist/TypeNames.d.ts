import { OrderedSet, Collection } from "immutable";
import { TypeAttributeKind, TypeAttributes } from "./TypeAttributes";
export declare function initTypeNames(): void;
export declare type NameOrNames = string | TypeNames;
export declare const tooManyNamesThreshold = 20;
export declare abstract class TypeNames {
    static make(names: OrderedSet<string>, alternativeNames: OrderedSet<string> | undefined, areInferred: boolean): TypeNames;
    readonly abstract areInferred: boolean;
    readonly abstract names: OrderedSet<string>;
    readonly abstract combinedName: string;
    readonly abstract proposedNames: OrderedSet<string>;
    abstract add(names: TypeNames): TypeNames;
    abstract clearInferred(): TypeNames;
    abstract makeInferred(): TypeNames;
    abstract singularize(): TypeNames;
    abstract toString(): string;
}
export declare class RegularTypeNames extends TypeNames {
    readonly names: OrderedSet<string>;
    private readonly _alternativeNames;
    readonly areInferred: boolean;
    constructor(names: OrderedSet<string>, _alternativeNames: OrderedSet<string> | undefined, areInferred: boolean);
    add(names: TypeNames): TypeNames;
    clearInferred(): TypeNames;
    readonly combinedName: string;
    readonly proposedNames: OrderedSet<string>;
    makeInferred(): TypeNames;
    singularize(): TypeNames;
    toString(): string;
}
export declare class TooManyTypeNames extends TypeNames {
    readonly areInferred: boolean;
    readonly names: OrderedSet<string>;
    constructor(areInferred: boolean);
    readonly combinedName: string;
    readonly proposedNames: OrderedSet<string>;
    add(_names: TypeNames): TypeNames;
    clearInferred(): TypeNames;
    makeInferred(): TypeNames;
    singularize(): TypeNames;
    toString(): string;
}
export declare function typeNamesUnion(c: Collection<any, TypeNames>): TypeNames;
export declare const namesTypeAttributeKind: TypeAttributeKind<TypeNames>;
export declare function modifyTypeNames(attributes: TypeAttributes, modifier: (tn: TypeNames | undefined) => TypeNames | undefined): TypeAttributes;
export declare function singularizeTypeNames(attributes: TypeAttributes): TypeAttributes;
export declare function makeNamesTypeAttributes(nameOrNames: NameOrNames, areNamesInferred?: boolean): TypeAttributes;
